{
  "compilerOptions": {
    // Specify ECMAScript target version
    "target": "es2018",
    // Specify module code generation
    "module": "commonjs",
    // List of library files to be included in the compilation
    "lib": ["es2018", "esnext.asynciterable"],
    // Redirect output structure to the directory
    "outDir": "./dist",
    // Specify the root directory of input files
    "rootDir": "./src",
    // Enable all strict type-checking options
    "strict": true,
    // Enables emit interoperability between CommonJS and ES Modules
    "esModuleInterop": true,
    // Allow import of JSON modules
    "resolveJsonModule": true,
    // Specify module resolution strategy
    "moduleResolution": "node",
    // Generates corresponding '.map' file
    "sourceMap": true,
    // Generates corresponding '.d.ts' file
    "declaration": true,
    // Raise error on expressions and declarations with an implied 'any' type
    "noImplicitAny": true,
    // Report errors on unused locals
    "noUnusedLocals": true,
    // Report errors on unused parameters
    "noUnusedParameters": true,
    // Do not emit comments to output
    "removeComments": true,
    // Ensure consistent casing in file names
    "forceConsistentCasingInFileNames": true
  },
  // Specify files to include in compilation
  "include": ["src/**/*"],
  // Specify files to exclude from compilation
  "exclude": ["node_modules", "**/*.spec.ts"]
}

// Human tasks:
// - Regularly review and update the TypeScript target version as new ECMAScript features become stable
// - Consider enabling stricter compiler options as the project matures (e.g., 'strictNullChecks', 'strictFunctionTypes')
// - Evaluate the need for additional type checking options based on project requirements
// - Ensure that the 'include' and 'exclude' patterns accurately reflect the project structure
// - Consider adding paths configuration for module aliasing if the project structure becomes more complex
// - Periodically review if any compiler options can be made stricter without causing issues
// - Add comments to explain the purpose of less common compiler options